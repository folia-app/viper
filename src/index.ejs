<html>

<head>
  <title>
    <%= htmlWebpackPlugin.options.title %>
  </title>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" />
  <meta name="description" content="<%= htmlWebpackPlugin.options.metaDesc %>" />
  <!-- <script src="https://cdn.jsdelivr.net/npm/prando@6.0.1/dist/Prando.umd.min.js"></script> -->
  <% for (key in htmlWebpackPlugin.files.js) { %>
    <script src="<%= htmlWebpackPlugin.files.js[key] %>"></script>
    <% } %>

      <!-- <script defer src="https://cdn.jsdelivr.net/npm/p5@1.6.0/lib/p5.js"></script> -->
      <script defer src="./p5.js"></script>
      <style>
        body {
          /* margin: 0; */
          /* padding: 0; */
          background: black;
        }
      </style>
</head>

<body>
  <div id="sketch-holder">
  </div>
  <script>
    var viper
    var startedDrawing = false
    var stop = false
    let patterns = [
      'random', //0
      'circle', //1
      'random', //2
      'square',//3
      'random', //4
      'eight', //5
      'random', //6
      'bigEight', //7
      'random',  //8
      'rotatingEight', //9
      'random', //10
      'randomLoop', //11
      'random', // 12
      'heart', // 13
      'random', // 14
      'star' // 15
    ]
    let patternIndex = Math.floor(Math.random() * (patterns.length))
    document.getElementById('sketch-holder').addEventListener('click', () => {
      stop = !stop
      if (stop) {
        patternIndex++
        viper.pattern = patterns[patternIndex % patterns.length]
      }
    })
    const styles = [
      'imgRandom',
      'imgSame',
      'imgRandomRounded',
      'imgSameRounded',
      'randomColor',
      'debug']
    const bgStyle = ['text', 'gradient-low', 'gradient-high', 'bw-gradient-high', 'bw-gradient-low']
    const source = (window.location.hash && window.location.hash.replace("#", "")) || Math.random().toString()
    const bgIndex = Math.floor(Math.random() * bgStyle.length)
    viper = new Viper({
      source,
      setting: "browser",
      // logs: false, // false, true, "verbose"
      // style: 'randomColor',//styles[Math.floor(Math.random() * (styles.length))],
      // style options
      // 1. maskClipRandom
      // 1. maskClipSame
      // 1. randomColor
      // 1. debug
      // 1. skeleton
      // 1. randomGreen*/,
      // backgroundStyle: 'gradient-low',//bgStyle[bgIndex],
      // backgroundStyle options
      // 1. solid
      // 1. gradient
      // 1. fourGradient
      // 1. image,
      // pattern: 'circle',//patterns[patternIndex % patterns.length],
      // pattern options
      // 1. random
      // 1. circle
      // 1. square
      // 1. eight 
      // 1. bigEight
      // 1. rotatingEight
      // 1. heart
      // 1. randomLoop */,
      // width: 686,
      maxNumberOfLines: 10,//Math.ceil(Math.random() * 20),
      // maxLen: 75,
      // strokeW: 60,
      // headWidth: 60 * 2.3,
      // margin: 60 * 2.3,
      // angleDistanceMin: 60,
      // fps: 25,
      // tweens: 2,
      // bgColor: "rgb(226,226,226)",
      // hideHole: true,
      // hideHead: true,
      // hideTail: true,
      // hideSnake: true,
      // redrawBackground: false,
      // wanderLoopDuration: 2,
    })
    let preloadDone = false
    async function preload() {
      // await viper.preload()
      // preloadDone = true
      // console.log('preload done')
    }
    async function setup() {
      console.log('setup')
      viper.setup()
      await viper.preload()
      preloadDone = true

      viper.addAllLines()
    }
    function draw() {
      if (!preloadDone) return
      if (!startedDrawing) {
        startedDrawing = true
        console.log('draw')
      }
      if (stop) return
      viper.draw()
    }
  </script>
</body>

</html>